---
# yamllint disable rule:line-length
name: Test Nodejs
description: |
  Github Action to Build & Test Nodejs

  RequiredEnv:
    AZ_DEVOP_PAT
    GITHUB_TOKEN
    SONAR_TOKEN
inputs:
  nodejs-version:
    description: >
      The nodejs-version input is optional.
      The default version of Nodejs in PATH varies
      between runners and can be changed unexpectedly
      so we recommend always setting Nodejs version explicitly
      using the nodejs-version input.
    required: false
  npm_package_publish:
    description: Enabled npm Package Publish to AzureDevops.
    required: false
    default: 'false'
  npm_test_script_name:
    description: npm test script name
    required: false
    default: test
  sonar_wait_flag:
    description: Says if Sonar has to wait for analysis
    required: false
runs:
  using: composite
  steps:
    - name: Find Nodejs Packager
      id: packager
      shell: bash
      run: |
        echo "packager=yarn" >> $GITHUB_OUTPUT
        if [ -f "package-lock.json" ]; then
            echo "packager=npm" >> $GITHUB_OUTPUT
        fi

    - name: Set up Nodejs
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.nodejs-version }}
        cache: ${{ steps.packager.outputs.packager }}

    - name: Run pre_test.sh
      shell: bash
      run: |
        pretest_cmd="echo 'NO_PRETEST'"
        if [ -f ".github/actions/pre_test.sh" ]; then
            pretest_cmd="$(cat .github/actions/pre_test.sh)"
        fi
        echo "pretest_cmd: $pretest_cmd"
        sh -c "${pretest_cmd}"

    - name: Install Application node_modules
      shell: bash
      run: |
        echo "::group::Upgrade Packages"
        if [ -f "yarn.lock" ]; then
            yarn install --frozen-lockfile
        fi
        if [ -f "package-lock.json" ]; then
            npm install
            npm ci
        fi
        echo "::endgroup::"

    - name: Run Test
      shell: bash
      run: |
        echo "::group::Run Test"
        if [ -f "yarn.lock" ]; then
            yarn run ${{ inputs.npm_test_script_name }}
        fi
        if [ -f "package-lock.json" ]; then
           npm run ${{ inputs.npm_test_script_name }}
        fi
        echo "::endgroup::"

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.qualitygate.wait=${{ inputs.sonar_wait_flag }}
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ env.SONAR_ORG }}
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
